{"/_app":{"title":" App","data":{"":""}},"/array":{"title":"Array","data":{"":""}},"/array/compact":{"title":"compact","data":{"":"Filters nullish items from an array","import#Import":"import { compact } from '@fullstacksjs/toolbox';","signature#Signature":"function compact<T extends readonly unknown[]>(xs: T): FilterNullish<T> {}","examples#Examples":"compact([])                                    // []\ncompact([1])                                   // [1]\ncompact([0, '', null, false, NaN, undefined]) // [0, '', false, NaN, {}]"}},"/array/copy":{"title":"copy","data":{"":"Returns a shallow copy version an array","import#Import":"import { copy } from '@fullstacksjs/toolbox';","signature#Signature":"function copy<T extends any[]>(arr: T): T {}","examples#Examples":"copy([])  // []\ncopy([1]) // [1]"}},"/array/ensure-array":{"title":"ensureArray","data":{"":"If the given value is not an array already, it wraps the value in an array.","import#Import":"import { ensureArray } from '@fullstacksjs/toolbox';","signature#Signature":"function ensureArray<T>(value: T): EnsureArray<T> {}","examples#Examples":"ensureArray(null);           // [null]\nensureArray(undefined);      // [undefined]\nensureArray('string');       // ['string']\nensureArray(['array']);      // ['array']\nensureArray([1, 2, 3]);      // [1, 2, 3]\nensureArray({ foo: 'bar' }); // [{ foo: 'bar' }]"}},"/array/get-random":{"title":"getRandom","data":{"":"Returns a random item from an array","import#Import":"import { getRandom } from '@fullstacksjs/toolbox';","signature#Signature":"function getRandom<T>(arr: T[]): T {}","examples#Examples":"getRandom([])        // undefined\ngetRandom([1])       // 1\ngetRandom([1, 2, 3]) // 1 | 2 | 3"}},"/array/is-empty":{"title":"isEmpty","data":{"":"Return whether an array is empty or not","import#Import":"import { isEmpty } from '@fullstacksjs/toolbox';","signature#Signature":"function isEmpty(x: unknown[]): boolean {}","examples#Examples":"isEmpty([])            // true\nisEmpty([1])           // false\nisEmpty([undefined])   // false\nisEmpty([null])        // false\nisEmpty([,])           // false\nisEmpty([, null])      // false\nisEmpty([, undefined]) // false"}},"/array/is-last-index":{"title":"isLastIndex","data":{"":"Check whether an index is the last index of an array.","import#Import":"import { isLastIndex } from '@fullstacksjs/toolbox';","signature#Signature":"function isLastIndex(arr: unknown[], index: number): boolean {}","examples#Examples":"isLastIndex([1], 0)           // true\nisLastIndex([1, 2], 1)        // true\nisLastIndex([[], [], []], 2)  // true\nisLastIndex([undefined], 0)   // true\nisLastIndex([null], 0)        // true\nisLastIndex([,], 0)           // true\nisLastIndex([,,], 1)          // true\nisLastIndex([, null], 1)      // true\nisLastIndex([, undefined], 1) // true\nisLastIndex([], 0)            // false\nisLastIndex([], -1)           // false\nisLastIndex([[], [], []], 0)  // false"}},"/array/is-null-or-empty-array":{"title":"isNullOrEmptyArray","data":{"":"Checks whether the given value is null, undefined or empty array.","import#Import":"import { isNullOrEmptyArray } from '@fullstacksjs/toolbox';","signature#Signature":"function isNullOrEmptyArray<T extends any[]>(arr: Nullable<T | []>): arr is Nullable<[]> {}","examples#Examples":"isNullOrEmptyArray(null)        // true\nisNullOrEmptyArray(undefined)   // true\nisNullOrEmptyArray([])          // true\nisNullOrEmptyArray([0])         // false\nisNullOrEmptyArray([,])         // false\nisNullOrEmptyArray([null])      // false\nisNullOrEmptyArray([undefined]) // false"}},"/array/join-path":{"title":"joinPath","data":{"":"join path parts with \"/\" and without trailing and leading slashes.","import#Import":"import { joinPath } from '@fullstacksjs/toolbox';","signature#Signature":"joinPath(array)","examples#Examples":"joinPath(['a', 'b'])                               // 'a/b'\njoinPath(['a', '/b'])                              // 'a/b'\njoinPath(['a', 'b/'])                              // 'a/b'\njoinPath(['a', '/b/'])                             // 'a/b'\njoinPath(['a/', 'b'])                              // 'a/b'\njoinPath(['a/', '/b'])                             // 'a/b'\njoinPath(['a/', 'b/'])                             // 'a/b'\njoinPath(['a/', '/b/'])                            // 'a/b'\njoinPath(['/a', 'b'])                              // 'a/b'\njoinPath(['/a', '/b'])                             // 'a/b'\njoinPath(['/a', 'b/'])                             // 'a/b'\njoinPath(['/a', '/b/'])                            // 'a/b'\njoinPath(['https://a.com', 'b'])                   // 'https://a.com/b'\njoinPath(['https://a.com', '/b'])                  // 'https://a.com/b'\njoinPath(['https://a.com', 'b/'])                  // 'https://a.com/b'\njoinPath(['https://a.com/', '/b/'])                // 'https://a.com/b'\njoinPath(['https://a.com/', '?b=a'])               // 'https://a.com/?b=a'\njoinPath(['https://a.com/', '/b/', '?query'])      // 'https://a.com/b/?query',\njoinPath(['https://a.com/', '?query', '&a=query']) // 'https://a.com/?query/&a=query',"}},"/array/range":{"title":"range","data":{"":"Create an array of specific length with a step and an offset.","import#Import":"import { range } from '@fullstacksjs/toolbox';","signature#Signature":"function range(length: number, offset: number = 0, step: number = 1): number[];","examples#Examples":"range(0);         // []\nrange(5);         // [0, 1, 2, 3, 4]\nrange(3, 5);      // [5, 6, 7]\nrange(3, -2, 10); // [-2, 8, 18]\nrange(3, 2, -4);  // [2, -2, -6]\nrange(3, -2, -1); // [-2, -3, -4]"}},"/array/shuffle":{"title":"shuffle","data":{"":"Return a shuffled version of an array","import#Import":"import { shuffle } from '@fullstacksjs/toolbox';","signature#Signature":"function shuffle<T extends any[]>(arr: T): T {}","examples#Examples":"shuffle([])        // []\nshuffle([1])       // [1]\nshuffle([1, 2, 3]) // Who knows?"}},"/array/to-array":{"title":"toArray","data":{"":"Returns array representation of a value.\nwhen the value is already an array it return the value.\nwhen the value is undefined or null it returns [].\nwhen the value is iterable it returns array representation of the value.\notherwise it wraps the value in an array.","import#Import":"import { toArray } from '@fullstacksjs/toolbox';","signature#Signature":"function toArray(value: null | undefined): [];\nfunction toArray<T extends any[]>(value: T): T;\nfunction toArray<T>(value: Iterable<T> | T[]): T[];\nfunction toArray<T>(value: T): [T];\nfunction toArray<T>(value: Iterable<T> | T | T[] | null | undefined) {}","examples#Examples":"toArray(null)      // []\ntoArray(undefined) // []\ntoArray('str')     // ['s', 't', 'r']\ntoArray([1])       // [1]\ntoArray(2)         // [2]"}},"/error":{"title":"Error","data":{"":""}},"/error/assert-not-null":{"title":"fallback","data":{"":"Asserts a value is not null or undefined","import#Import":"import { fallback } from '@fullstacksjs/toolbox';","signature#Signature":"function assertNotNull<T>(value: Nullable<T>, error: string = 'Value is required'): asserts value is NonNullable<T> {}","examples#Examples":"assertNotNull(null, 'WTF')      // Throw 'WTF'\nassertNotNull(undefined, 'WTF') // Throw 'WTF'\nassertNotNull(true)             // noop"}},"/error/assert":{"title":"assert","data":{"":"Throws an error when the condition is not true.","import#Import":"import { assert } from '@fullstacksjs/toolbox';","signature#Signature":"function assert(condition: boolean, msg: string = 'Assertion failed'): void {}","examples#Examples":"assert(false, 'WTF') // Throw 'WTF'\nassert(true, 'WTF')  // noop"}},"/error/throw-err":{"title":"throwErr","data":{"":"Expression form of throw","import#Import":"import { throwErr } from '@fullstacksjs/toolbox';","signature#Signature":"function throwErr(err: unknown): never {}","examples#Examples":"throwErr('oops')              // throw 'oops'\nthrowErr(Error('oops'))       // throw Error('oops')\nthrowErr(CustomError('oops')) // throw CustomError('oops')"}},"/function":{"title":"Function","data":{"":""}},"/function/call-all":{"title":"callAll","data":{"":"a HOC function that can call all given functions.","import#Import":"import { callAll } from '@fullstacksjs/toolbox';","signature#Signature":"function callAll<T>(...fns: Nullable<Function>[]) {}","examples#Examples":"callAll(foo, bar, baz)(1);                         // void(foo(1), bar(1), baz(1))\ncallAll(bar, null, undefined, baz)(); // void (bar(), baz());"}},"/function/debounce":{"title":"debounce","data":{"":"The debounce function is commonly used to ensure that time-consuming tasks do\nnot fire too often. It waits for a set interval after the last invocation before\nexecuting the callback function.If immediate is set to true, the original function will be called\nimmediately. However, the function won't be called again unless the debounced\nfunction stops being invoked for the specified duration.","import#Import":"import { debounce } from '@fullstacksjs/toolbox';","signature#Signature":"function debounce<F>(\noptions: { delay: number; immediate?: boolean },\ncb: F,\n): (...args: Parameters<F>) => void {}","examples#Examples":"function log(id: number) {\nconsole.log(id);\n}\n\nconst debounced = debounce({ delay: 1000 }, log);\n\ndebounced(1); // ignored\ndebounced(2); // ignored\ndebounced(3); // ignored\n\nsetTimeout(function () {\nthrottled(4); // 4\nthrottled(5); // ignored\n}, 1000);\n\nconst debounced = debounce({ delay: 1000, immediate: true }, log);\n\ndebounced(1); // 1\ndebounced(2); // ignored\ndebounced(3); // ignored\n\nsetTimeout(function () {\nthrottled(4); // 4\nthrottled(5); // ignored\n}, 1000);"}},"/function/noop":{"title":"noop","data":{"":"No operation ¯\\(ツ)/¯.","import#Import":"import { noop } from '@fullstacksjs/toolbox';","signature#Signature":"function noop(): void {}","examples#Examples":"noop() // undefined"}},"/function/not":{"title":"not","data":{"":"Returns the complement of its argument.","import#Import":"import { not } from '@fullstacksjs/toolbox';","signature#Signature":"function not(b: any): boolean {}","examples#Examples":"not(true)  // false\nnot(false) // true\nnot(0)     // true\nnot(1)     // false"}},"/function/sleep":{"title":"sleep","data":{"":"Returns a promise that resolves after a certain milliseconds.","import#Import":"import { sleep } from '@fullstacksjs/toolbox';","signature#Signature":"function sleep(ms: number): Promise<void> {}","examples#Examples":"sleep(1000).then(() => console.log(\"Hi\")) // Logs hi after 1 second\nawait sleep(1000); console.log(\"Hi\")      // Logs hi after 1 second"}},"/function/throttle":{"title":"throttle","data":{"":"Returns a new function that triggers the given callback only if a specified\ninterval of time has elapsed since its previous invocation.","import#Import":"import { throttle } from '@fullstacksjs/toolbox';","signature#Signature":"function throttle<F extends (...args: any[]) => any>(\noptions: {\ndelay: number;\n},\ncb: F,\n): (...args: Parameters<F>) => void {}","examples#Examples":"// callback function\nfunction execute(id: number) {\nconsole.log(id);\n}\n\n// Logs id at most once per 100ms\nconst throttled = throttle({ delay: 100 }, execute);\n\nsetTimeout(function () {\nthrottled(0); // 0\nthrottled(1); // ignored\n}, 0);\n\nsetTimeout(function () {\nthrottled(2); // ignored\nthrottled(3); // ignored\n}, 50);\n\nsetTimeout(function () {\nthrottled(4); // 4\nthrottled(5); // ignored\n}, 150);"}},"/getting-started":{"title":"Getting Started","data":{"":"","installation#Installation":"","node#Node":"npm\nnpm install --save-dev @fullstacksjs/toolbox\npnpm\npnpm add --save-dev @fullstacksjs/toolbox\nyarn\nyarn add --dev @fullstacksjs/toolbox","deno#Deno":"import * as toolbox from 'https://raw.githubusercontent.com/fullstacksjs/toolbox/main/mod.ts'","browser-esm#Browser ESM":"ES Module\n<script type=\"module\">\nimport * as toolbox from 'https://www.unpkg.com/@fullstacksjs/toolbox@<VERSION>/lib/esm/index.js';\n</script>\nScript\n<script src='https://www.unpkg.com/@fullstacksjs/toolbox/iife/index.js'></script>\n<script>\nconsole.log(window.Toolbox)\n</script>"}},"/guard":{"title":"Guard","data":{"":"Guard functions"}},"/guard/is-boolean":{"title":"isBoolean","data":{"":"Checks whether the given value is boolean or not","import#Import":"import { isBoolean } from '@fullstacksjs/toolbox';","signature#Signature":"function isBoolean(x: unknown): x is boolean {};","examples#Examples":"isBoolean(true)      // true\nisBoolean(false)     // true\nisBoolean('')        // false\nisBoolean(undefined) // false\nisBoolean(null)      // false\nisBoolean(1)         // false\nisBoolean(['1'])     // false"}},"/guard/is-function":{"title":"isFunction","data":{"":"Check whether the given value is a functions or not","import#Import":"import { isFunction } from '@fullstacksjs/toolbox';","signature#Signature":"function isFunction(x: unknown): x is Function {}","examples#Examples":"isFunction(() => 1)   // true\nisFunction(undefined) // false\nisFunction(true)      // false\nisFunction('string')  // false"}},"/guard/is-iterable":{"title":"isIterable","data":{"":"Check whether the given value is iteratable or not","import#Import":"import { isIterable } from '@fullstacksjs/toolbox';","signature#Signature":"function isIterable<T>(x: unknown): x is Iterable<T> {}","examples#Examples":"isIterable([])        // true\nisIterable(new Map()) // true\nisIterable('some')    // true\nisIterable({})        // false\nisIterable(undefined) // false"}},"/guard/is-not-null":{"title":"isNotNull","data":{"":"Check whether the given value is not nullable (undefined or null)","import#Import":"import { isNotNull } from '@fullstacksjs/toolbox';","signature#Signature":"function isNotNull<T>(x: T): x is NonNullable<T> {}","examples#Examples":"isNotNull(undefined) // false\nisNotNull(null)      // false\nisNotNull('null')    // true\nisNotNull(0)         // true\nisNotNull([])        // true\nisNotNull({})        // true\nisNotNull(false)     // true"}},"/guard/is-null":{"title":"isNull","data":{"":"Check whether the given value is nullable (undefined or null)","import#Import":"import { isNull } from '@fullstacksjs/toolbox';","signature#Signature":"function isNull(x: unknown): x is Nullish {};","examples#Examples":"isNull(undefined) // true\nisNull(null)      // true\nisNull('null')    // false\nisNull(0)         // false\nisNull([])        // false\nisNull({})        // false\nisNull(false)     // false"}},"/guard/is-object":{"title":"isObject","data":{"":"Check whether the given value is an object","import#Import":"import { isObject } from '@fullstacksjs/toolbox';","signature#Signature":"function isObject(x: unknown): x is Record<number | string | symbol, any> {}","examples#Examples":"* isObject('')            // false\n* isObject('hello world') // false\n* isObject(null)          // false\n* isObject(true)          // false\n* isObject(undefined)     // false\n* isObject(NaN)           // false\n* isObject(0)             // false\n* isObject(isObject)      // false\n* isObject(false)         // false\n* isObject([])            // false\n* isObject([2])           // false\n* isObject({})            // true\n* isObject({ a: 2 })      // true\n* isObject({ 2: 'a' })    // true"}},"/guard/is-string":{"title":"isString","data":{"":"Check whether the given value is string or not","import#Import":"import { isString } from '@fullstacksjs/toolbox';","signature#Signature":"function isString(x: unknown): x is string {}","examples#Examples":"isString('')        // true\nisString(undefined) // false\nisString(null)      // false\nisString(1)         // false\nisString(['1'])     // false"}},"/guard/is-truthy":{"title":"isTruthy","data":{"":"Check whether the given value is truthy","import#Import":"import { isTruthy } from '@fullstacksjs/toolbox';","signature#Signature":"function isTruthy<T>(x: T): x is Truthy<T> {};","examples#Examples":"isTruthy(undefined) // false\nisTruthy(NaN)    // false\nisTruthy(false)  // false\nisTruthy(0)      // false\nisTruthy(null)   // false\nisTruthy('null') // true\nisTruthy(1)      // true\nisTruthy([])     // true\nisTruthy({})     // true"}},"/":{"title":"Introduction","data":{"":"Welcome to Toolbox! A zero-dependency 📦, tree-shakable🌲 collection of\nmissing JavaScript utilities.","why-toolbox#Why Toolbox?":"📦️ Zero-dependencies: You only need one external library to replace all\nothers.\n🌲 Efficient tree-shaking: Adding just one function will only increase\nyour bundle by 3 lines.\n🏗️ Modern: works with ESM, Deno, NodeJS and browser\n🧪 Fully tested: All functions are thoroughly tested with unit tests.\n🥅 Practical focus: Only functions with practical applications are\nincluded in the library collection.","motivation#Motivation":"The @fullstacksjs/toolbox aims to provide a simple and practical solution to\nthe lack of essential utilities in JavaScript.It eliminates the need for code duplication or excessive third-party\ndependencies, simplifying the development process. Say goodbye 👋 to dependency\nhell 🔥 and enjoy simplicity."}},"/node":{"title":"Env","data":{"":""}},"/node/get-node-env":{"title":"getNodeEnv","data":{"":"Check whether NodeJS Env is development.","import#Import":"import { getNodeEnv } from '@fullstacksjs/toolbox';","signature#Signature":"function getNodeEnv(fallback?: string): string {}","examples#Examples":"/* NODE_ENV=development node */\ngetNodeEnv() // \"development\"\n\n/* NODE_ENV=production node */\ngetNodeEnv() // \"production\"\n\n/* NODE_ENV=\"\" node */\ngetNodeEnv('development') // \"development\""}},"/node/is-dev":{"title":"isDev","data":{"":"Check whether NodeJS Env is development.","import#Import":"import { isDev } from '@fullstacksjs/toolbox';","signature#Signature":"function isDev(): boolean {}","examples#Examples":"/* NODE_ENV=development node */\nisDev() // true\n\n/* NODE_ENV=production node */\nisDev() // false\n\n/* NODE_ENV=\"\" node */\nisDev() // false"}},"/node/is-prod":{"title":"isProd","data":{"":"Check whether NodeJS Env is production.","import#Import":"import { isProd } from '@fullstacksjs/toolbox';","signature#Signature":"function isProd(): boolean {}","examples#Examples":"/* NODE_ENV=development node */\nisProd() // true\n\n/* NODE_ENV=production node */\nisProd() // false\n\n/* NODE_ENV=\"\" node */\nisProd() // false"}},"/nullable":{"title":"Nullable","data":{"":""}},"/nullable/bind":{"title":"bind","data":{"":"Safely pass a nullable value to composition of functions","import#Import":"import { bind } from '@fullstacksjs/toolbox';","signature#Signature":"function bind<T, U>(x: Nullable<T>, ...fns: Function[]): U {}","examples#Examples":"bind(null,f)           // null\nbind(1, f)             // f(1)\nbind(2, f, g, h)       // h(g(f(2)))\nbind(null, f, g, h, j) // null"}},"/nullable/concat-arrays":{"title":"concatArrays","data":{"":"Gets some nullable arrays and returns concatenation of existing ones.","import#Import":"import { concatArrays } from '@fullstacksjs/toolbox';","signature#Signature":"function concatArrays<T extends any[]>(...mas: T): T[] {}","examples#Examples":"concatArrays(undefined)                       // []\nconcatArrays(null, undefined)                 // []\nconcatArrays([])                              // []\nconcatArrays(undefined, [1, 2], null)         // [1, 2]\nconcatArrays(undefined, [1, 2], null, [3, 4]) // [1, 2, 3, 4]\nconcatArrays([1, 2], ['3', '4'])              // [1, 2, '3', '4']\nconcatArrays([1, 2])                          // [1, 2]"}},"/number":{"title":"Number","data":{"":""}},"/number/clamp":{"title":"clamp","data":{"":"Clamps a number between two values","import#Import":"import { clamp } from '@fullstacksjs/toolbox';","signature#Signature":"function clamp(value: number, min: number, max: number): number {}","examples#Examples":"clamp(5, 0, 100)   // 5\nclamp(-10, 0, 100) // 0\nclamp(101, 0, 100) // 100"}},"/number/divide":{"title":"divide","data":{"":"Divides two numbers returns fallback if result is not a finite number","import#Import":"import { divide } from '@fullstacksjs/toolbox';","signature#Signature":"function divide(dividend: number, divisor: number, fallback: number = NaN): number {}","examples#Examples":"divide(4, 2)     // 2\ndivide(4, 0, 42) // 42\ndivide(4, 0)     // NaN"}},"/number/fallback-number":{"title":"fallback","data":{"":"Returns the value if the given value is finite; otherwise, it returns the fallback value.","import#Import":"import { fallbackNumber } from '@fullstacksjs/toolbox';","signature#Signature":"function fallbackNumber<T extends number = number>(value: Nullable<T>, fallbackValue: T): NonNullable<T> {}","examples#Examples":"fallbackNumber(0, 1)         // 0\nfallbackNumber(-1, 1)        // -1\nfallbackNumber(1, -1)        // 1\nfallbackNumber(-0, 1)        // -0\nfallbackNumber(NaN, 1)       // 1\nfallbackNumber(Infinity, 1)  // 1\nfallbackNumber(-Infinity, 1) // 1"}},"/number/is-in-range":{"title":"isInRage","data":{"":"Checks if num is between min and max (including borders).","import#Import":"import { isInRage } from '@fullstacksjs/toolbox';","signature#Signature":"function isInRange(num: number, min: number, max: number): boolean {}","examples#Examples":"isInRange(51, 0, 50)   // false\nisInRange(-1, 0, 100)  // true\nisInRange(100, 0, 100) // true\nisInRange(0, 0, 100)   // true\nisInRange(50, 0, 100)  // true"}},"/number/percent":{"title":"percent","data":{"":"Returns percentage value of a number from a maximum number","import#Import":"import { percent } from '@fullstacksjs/toolbox';","signature#Signature":"function percent(value: number, max: number): number {}","examples#Examples":"percent(0, 10)   // 0\npercent(1, 10)   // 10\npercent(-1, 10)  // 0\npercent(20, 10)  // 100\npercent(NaN, 10) // 0\npercent(10, NaN) // 0\npercent(1, 3)    // 33.33333333333333"}},"/number/random-int":{"title":"randomInt","data":{"":"Generate a random integer number between two values. (borders are included)","import#Import":"import { randomInt } from '@fullstacksjs/toolbox';","signature#Signature":"function randomInt(min: number = 0, max: number = Number.MAX_SAFE_INTEGER): number {}","examples#Examples":"randomInt()      // Random between 0,  MAX_SAFE_INTEGER\nrandomInt(10)    // Random between 10, MAX_SAFE_INTEGER\nrandomInt(0, 1)  // 0 | 1"}},"/number/to-decimal":{"title":"toDecimal","data":{"":"Parses the string to decimal and returns fallback when the value is not finite","import#Import":"function toDecimal(s: string, fallback: number = NaN): number {}","signature#Signature":"function toDecimal(min: number = 0, max: number = Number.MAX_SAFE_INTEGER): number {}","examples#Examples":"toDecimal('S')            // NaN\ntoDecimal('100')          // 100\ntoDecimal('1.42')         // 1\ntoDecimal('S', 10)        // 10\ntoDecimal('S', undefined) // NaN"}},"/object":{"title":"Object","data":{"":""}},"/object/prune-key-when":{"title":"pruneKeyWhen","data":{"":"Remove key from an object when predicate is true","import#Import":"import { pruneKeyWhen } from '@fullstacksjs/toolbox';","signature#Signature":"function pruneKeyWhen(min: number = 0, max: number = Number.MAX_SAFE_INTEGER): number {}","examples#Examples":"pruneKeyWhen({ a: { b: null } }, () => false)      // { a: { b: null } }\npruneKeyWhen({ a: 'John', b: {} }, () => true)     // {}\npruneKeyWhen({ a: null, age: '' }, k => k === 'a') // { a: null }"}},"/object/prune-value-when":{"title":"pruneValueWhen","data":{"":"Remove property from an object when predicate is true","import#Import":"import { pruneValueWhen } from '@fullstacksjs/toolbox';","signature#Signature":"function pruneValueWhen(min: number = 0, max: number = Number.MAX_SAFE_INTEGER): number {}","examples#Examples":"pruneValueWhen({ a: { b: null } }, v => !v)                          // { a: { b: null } }\npruneValueWhen({ a: null, b: '', c: undefined }, v => !v)            // {}\npruneValueWhen({ a: 'John', b: null, c: '', d: undefined }, v => !v) // { a: 'John' }"}},"/regex":{"title":"Regex","data":{"":""}},"/regex/escape-regex":{"title":"escapeRegex","data":{"":"Escapes regex charsIf you need to use any of the special characters literally (actually searching\nfor a \"\", for instance), you must escape it by putting a backslash in front of\nit. For instance, to search for \"a\" followed by \"\" followed by \"b\", you'd use\n/a*b/ — the backslash \"escapes\" the \"*\", making it literal instead of special.\nRead more on\nMDN","import#Import":"import { escapeRegex } from '@fullstacksjs/toolbox';","signature#Signature":"function escapeRegex(s: string): string {}","examples#Examples":"new RegExp(escapeRegex('^[](){}$')).test('^[](){}$') // true\nnew RegExp(escapeRegex('^a$')).test('a')             // false"}},"/regex/test-regex":{"title":"testRegex","data":{"":"Check if a string passes a specific regex","import#Import":"import { testRegex } from '@fullstacksjs/toolbox';","signature#Signature":"function testRegex(regex: RegExp, str: string): boolean {}","examples#Examples":"const regexA = /a/g\ntestRegex(regexA, 'a') // true\nregexA.lastIndex       // 0\n\nconst regexB = /b/g\ntestRegex(regexB, 'a') // false\nregexB.lastIndex       // 0"}},"/string":{"title":"String","data":{"":""}},"/string/compare-paths":{"title":"comparePaths","data":{"":"Compare two path without trailing and leading slashes","import#Import":"import { comparePaths } from '@fullstacksjs/toolbox';","signature#Signature":"function comparePaths(\npath1: string,\npath2: string,\n{ sensitivity = 'accent' }: { sensitivity?: Sensitivity } = {},\n): number {}","examples#Examples":"comparePaths('b', 'a')                // 1\ncomparePaths('a', 'b')                // -1\ncomparePaths('path', 'PAth')          // 0\ncomparePaths('reserve', 'réservé')    // 0\ncomparePaths('/path1/', '/path1/')    // 0\ncomparePaths('reserve', 'reserve//')  // 0\ncomparePaths('//reserve', 'reserve')  // 0\ncomparePaths('reserve//', 'reserve/') // 0\ncomparePaths('/reserve', '//reserve') // 0"}},"/string/crlf-to-lf":{"title":"crlfToLf","data":{"":"Converts crlf to lf","import#Import":"import { crlfToLf } from '@fullstacksjs/toolbox';","signature#Signature":"function crlfToLf(str: string): string {}","examples#Examples":"crlfToLf('hello world\\r\\n')   // 'hello world\\n'\ncrlfToLf('hello world\\r\\n\\n') // 'hello world\\n\\n'\ncrlfToLf('hello world\\n')     // 'hello world\\n'\ncrlfToLf('hello world')       // 'hello world'\ncrlfToLf('')                  // ''\ncrlfToLf(' ')                 // ' '"}},"/string/fallback-string":{"title":"fallbackString","data":{"":"Returns the provided fallback value if the given value is null, undefined, or an empty string; otherwise, it returns the original value.","import#Import":"import { fallbackString } from '@fullstacksjs/toolbox';","signature#Signature":"function fallbackString<T extends string = string>(value: Nullable<T>, fallbackStringValue: T): NonNullable<T> {}","examples#Examples":"fallbackString('', 'd')        // 'd'\nfallbackString(' ', 'd')       // ' '\nfallbackString('x', 'd')       // 'x'\nfallbackString(null, 'd')      // 'd'\nfallbackString(undefined, 'd') // 'd'"}},"/string/get-initials":{"title":"getInitials","data":{"":"Returns initial characters of spaces separated words","import#Import":"import { getInitials } from '@fullstacksjs/toolbox';","signature#Signature":"function getInitials(name: string, fallback: string = '?'): string {}","examples#Examples":"getInitials('')                  // '?'\ngetInitials(' ', 'FB')           // 'FB'\ngetInitials('frontend')          // 'F'\ngetInitials('frontend monsters') // 'FM'\ngetInitials('2')                 // '2'\ngetInitials('1 2 3 4')           // '1234'\ngetInitials('x @# % * ))__() 1') // 'X@%*)1'\ngetInitials('frontend monster rides a dinosaur in office') // 'FMRADIO'"}},"/string/is-lower-case":{"title":"isLowerCase","data":{"":"Returns a boolean indicating whether the string is lower case.","import#Import":"import { isLowerCase } from '@fullstacksjs/toolbox';","signature#Signature":"function isLowerCase(str: string): boolean {}","examples#Examples":"isLowerCase('')           // false\nisLowerCase('test')       // true\nisLowerCase('TEST')       // false\nisLowerCase('Test')       // false\nisLowerCase('123')        // false\nisLowerCase('snake_case') // true"}},"/string/is-null-or-empty-string":{"title":"isNullOrEmptyString","data":{"":"Checks whether the given value is null, undefined or empty string.","import#Import":"import { isNullOrEmptyString } from '@fullstacksjs/toolbox';","signature#Signature":"function isNullOrEmptyString(str: Nullable<string>): str is Nullable<''> {}","examples#Examples":"isNullOrEmptyString(null)      // true\nisNullOrEmptyString(undefined) // true\nisNullOrEmptyString('')        // true\nisNullOrEmptyString('f')       // false"}},"/string/join-paths":{"title":"joinPaths","data":{"":"Joins path parts with / and remove trailing and leading slashes","import#Import":"import { joinPaths } from '@fullstacksjs/toolbox';","signature#Signature":"function joinPaths(...paths: string[]): string {}","examples#Examples":"joinPaths('a', 'b')                               // 'a/b'\njoinPaths('a', '/b')                              // 'a/b'\njoinPaths('a', 'b/')                              // 'a/b'\njoinPaths('a', '/b/')                             // 'a/b'\njoinPaths('a/', 'b')                              // 'a/b'\njoinPaths('a/', '/b')                             // 'a/b'\njoinPaths('a/', 'b/')                             // 'a/b'\njoinPaths('a/', '/b/')                            // 'a/b'\njoinPaths('/a', 'b')                              // 'a/b'\njoinPaths('/a', '/b')                             // 'a/b'\njoinPaths('/a', 'b/')                             // 'a/b'\njoinPaths('/a', '/b/')                            // 'a/b'\njoinPaths('https://a.com', 'b')                   // 'https://a.com/b'\njoinPaths('https://a.com', '/b')                  // 'https://a.com/b'\njoinPaths('https://a.com', 'b/')                  // 'https://a.com/b'\njoinPaths('https://a.com/', '/b/')                // 'https://a.com/b'\njoinPaths('https://a.com/', '?b=a')               // 'https://a.com/?b=a'\njoinPaths('https://a.com/', '/b/', '?query')      // 'https://a.com/b/?query'\njoinPaths('https://a.com/', '?query', '&a=query') // 'https://a.com/?query/&a=query'"}},"/string/remove-leading-slashes":{"title":"isLowerCase","data":{"":"Removes leading slashes from a string","import#Import":"import { isLowerCase } from '@fullstacksjs/toolbox';","signature#Signature":"function removeLeadingSlashes(str: string): string {}","examples#Examples":"removeLeadingSlashes('')           // ''\nremoveLeadingSlashes('/')          // ''\nremoveLeadingSlashes('string')     // 'string'\nremoveLeadingSlashes('/string')    // 'string'\nremoveLeadingSlashes('//string')   // 'string'\nremoveLeadingSlashes('//string/')  // 'string/'\nremoveLeadingSlashes('//string/a') // 'string/a'"}},"/string/remove-trailing-slashes":{"title":"removeTrailingSlashes","data":{"":"Removes trailing slashes from a string","import#Import":"import { removeTrailingSlashes } from '@fullstacksjs/toolbox';","signature#Signature":"function removeTrailingSlashes(str: string): string {}","examples#Examples":"removeTrailingSlashes('')           // ''\nremoveTrailingSlashes('/')          // ''\nremoveTrailingSlashes('string')     // 'string'\nremoveTrailingSlashes('/string')    // 'string'\nremoveTrailingSlashes('//string')   // 'string'\nremoveTrailingSlashes('//string/')  // 'string/'\nremoveTrailingSlashes('//string/a') // 'string/a'"}},"/string/to-camel-case":{"title":"toCamelCase","data":{"":"Converts any casing to camelCase","import#Import":"import { toCamelCase } from '@fullstacksjs/toolbox';","signature#Signature":"function camelCaseTransform(input: string, index: number) {}","examples#Examples":"toCamelCase('')             // ''\ntoCamelCase(' ')            // ''\ntoCamelCase('foo')          // 'foo'\ntoCamelCase('foo bar')      // 'fooBar'\ntoCamelCase('foo-bar')      // 'fooBar'\ntoCamelCase('fooBar')       // 'fooBar'\ntoCamelCase('foo_bar')      // 'fooBar'\ntoCamelCase('foo bar code') // 'fooBarCode'\ntoCamelCase('foo-bar-code') // 'fooBarCode'\ntoCamelCase('fooBarCode')   // 'fooBarCode'\ntoCamelCase('foo_bar_code') // 'fooBarCode'\ntoCamelCase('FOO_BAR_CODE') // 'fooBarCode'\ntoCamelCase('ThisIs-fullstacksjs radio__and--I-loveCoding') // 'thisIsFullstacksjsRadioAndILoveCoding'"}},"/string/to-capital-case":{"title":"toCapitalCase","data":{"":"Converts the starting letter of every word into an upper case and will leave the\nremaining letters as lower case ones.","import#Import":"import { toCapitalCase } from '@fullstacksjs/toolbox';","signature#Signature":"function toCapitalCase(str: string): string {}","examples#Examples":"toCapitalCase(''); // ''\ntoCapitalCase(' '); // ''\ntoCapitalCase('foo'); // 'Foo'\ntoCapitalCase('foo bar'); // 'Foo Bar'\ntoCapitalCase('foo-bar'); // 'Foo Bar'\ntoCapitalCase('fooBar'); // 'Foo Bar'\ntoCapitalCase('foo_bar'); // 'Foo Bar'\ntoCapitalCase('foo bar code'); // 'Foo Bar Code'\ntoCapitalCase('foo-bar-code'); // 'Foo Bar Code'\ntoCapitalCase('fooBarCode'); // 'Foo Bar Code'\ntoCapitalCase('foo_bar_code'); // 'Foo Bar Code'\ntoCapitalCase('FOO_BAR_CODE'); // 'Foo Bar Code'\ntoCapitalCase('ThisIs-fullstacksjs radio__and--I-loveCoding'); // This Is Fullstacksjs Radio And I Love Coding"}},"/string/to-kebab-case":{"title":"toKebabCase","data":{"":"Converts any casing to kebab-case","import#Import":"import { toKebabCase } from '@fullstacksjs/toolbox';","signature#Signature":"function toKebabCase(str: string): string {}","examples#Examples":"toKebabCase('')             // ''\ntoKebabCase(' ')            // ''\ntoKebabCase('foo')          // 'foo'\ntoKebabCase('foo bar')      // 'foo-bar'\ntoKebabCase('foo-bar')      // 'foo-bar'\ntoKebabCase('fooBar')       // 'foo-bar'\ntoKebabCase('foo_bar')      // 'foo-bar'\ntoKebabCase('foo bar code') // 'foo-bar-code'\ntoKebabCase('foo-bar-code') // 'foo-bar-code'\ntoKebabCase('fooBarCode')   // 'foo-bar-code'\ntoKebabCase('foo_bar_code') // 'foo-bar-code'\ntoKebabCase('FOO_BAR_CODE') // 'foo-bar-code'\ntoKebabCase('ThisIs-fullstacksjs radio__and--I-loveCoding') // 'this-is-fullstacksjs-radio-and-i-love-coding',"}},"/string/to-pascal-case":{"title":"toPascalCase","data":{"":"Converts any casing to PascalCase","import#Import":"import { toPascalCase } from '@fullstacksjs/toolbox';","signature#Signature":"function toPascalCase(str: string): string {}","examples#Examples":"toPascalCase('')              '// '\ntoPascalCase(' ')             '// '\ntoPascalCase('foo')            // 'Foo'\ntoPascalCase('foo bar')        // 'FooBar'\ntoPascalCase('foo-bar')        // 'FooBar'\ntoPascalCase('fooBar')         // 'FooBar'\ntoPascalCase('foo_bar')        // 'FooBar'\ntoPascalCase('foo bar code')   // 'FooBarCode'\ntoPascalCase('foo-bar-code')   // 'FooBarCode'\ntoPascalCase('fooBarCode')     // 'FooBarCode'\ntoPascalCase('foo_bar_code')   // 'FooBarCode'\ntoPascalCase('FOO_BAR_CODE')   // 'FooBarCode'\ntoPascalCase('foo_ -BaRC ode') // 'FooBaRcOde'\ntoPascalCase('ThisIs-fullstacksjs radio__and--I-loveCoding') // 'ThisIsFullstacksjsRadioAndILoveCoding'"}},"/string/to-snake-case":{"title":"toSnakeCase","data":{"":"Converts any casing to snake_case","import#Import":"import { toSnakeCase } from '@fullstacksjs/toolbox';","signature#Signature":"function toSnakeCase(str: string): string {}","examples#Examples":"toSnakeCase('')             // ''\ntoSnakeCase(' ')            // ''\ntoSnakeCase('foo')          // 'foo'\ntoSnakeCase('foo bar')      // 'foo_bar'\ntoSnakeCase('foo-bar')      // 'foo_bar'\ntoSnakeCase('fooBar')       // 'foo_bar'\ntoSnakeCase('foo_bar')      // 'foo_bar'\ntoSnakeCase('foo bar code') // 'foo_bar_code'\ntoSnakeCase('foo-bar-code') // 'foo_bar_code'\ntoSnakeCase('fooBarCode')   // 'foo_bar_code'\ntoSnakeCase('foo_bar_code') // 'foo_bar_code'\ntoSnakeCase('FOO_BAR_CODE') // 'foo_bar_code'\ntoSnakeCase('ThisIs-fullstacksjs radio__and--I-loveCoding') // 'this_is_fullstacksjs_radio_and_i_love_coding'"}},"/string/to-space-case":{"title":"toSpaceCase","data":{"":"Separates words by space and makes them lowercase.","import#Import":"import { toSpaceCase } from '@fullstacksjs/toolbox';","signature#Signature":"function toSpaceCase(str: string): string {}","examples#Examples":"toSpaceCase(''); // ''\ntoSpaceCase(' '); // ''\ntoSpaceCase('foo'); // 'foo'\ntoSpaceCase('foo bar'); // 'foo bar'\ntoSpaceCase('foo-bar'); // 'foo bar'\ntoSpaceCase('fooBar'); // 'foo bar'\ntoSpaceCase('foo_bar'); // 'foo bar'\ntoSpaceCase('foo bar code'); // 'foo bar code'\ntoSpaceCase('foo-bar-code'); // 'foo bar code'\ntoSpaceCase('fooBarCode'); // 'foo bar code'\ntoSpaceCase('foo_bar_code'); // 'foo bar code'\ntoSpaceCase('FOO_BAR_CODE'); // 'foo bar code'\ntoSpaceCase('FOO BAR CODE'); // 'foo bar code'\ntoSpaceCase('foo_ -BaRC ode'); // 'foo ba rc ode'\ntoSpaceCase('ThisIs-fullstacksjs radio__and--I-loveCoding'); // 'this is fullstacksjs radio and i love coding'"}},"/type":{"title":"Type","data":{"":""}},"/type/nullable":{"title":"Nullable","data":{"":"type name = Nullable<string> // null | string"}},"/runtime":{"title":"Runtime","data":{"":""}},"/runtime/is-browser":{"title":"isBrowser","data":{"":"Returns true when runtime is a browser.","import#Import":"import { isBrowser } from '@fullstacksjs/toolbox';","signature#Signature":"function isBrowser(): boolean {}","examples#Examples":"if (isBrowser()) alert('I will run in the client only');\nif (!isBrowser()) console.log('This runs in server environment');"}},"/runtime/is-bun":{"title":"Bun","data":{"":"Returns true when runtime is Bun","import#Import":"import { isBun } from '@fullstacksjs/toolbox';","signature#Signature":"function isBun(): boolean {}","examples#Examples":"if (isBun()) console.log(Bun.version);\nif (!isBun()) console.log('Node, Deno, or browser?');"}},"/runtime/is-deno":{"title":"isDeno","data":{"":"Returns true when runtime is Deno.","import#Import":"import { isDeno } from '@fullstacksjs/toolbox';","signature#Signature":"function isDeno(): boolean {}","examples#Examples":"if (isDeno()) Deno.cwd();\nif (!isDeno()) console.log('NodeJS, bun, or browser?');"}},"/runtime/is-nodejs":{"title":"isNodeJS","data":{"":"Returns true when runtime is NodeJS.","import#Import":"import { isNodeJS } from '@fullstacksjs/toolbox';","signature#Signature":"function isNodeJS(): boolean {}","examples#Examples":"if (isNodeJS()) global.process.env;\nif (!isNodeJS()) console.log('Deno, bun, or browser?');"}},"/runtime/is-server":{"title":"isServer","data":{"":"Returns true when runtime is a server-side","import#Import":"import { isServer } from '@fullstacksjs/toolbox';","signature#Signature":"function isServer(): boolean {}","examples#Examples":"if (isServer()) console.log('This runs in server environment');\nif (!isServer()) alert('I will run in the client only');"}}}